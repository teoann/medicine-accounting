// <auto-generated />
using MedicineAccountingAPI.DataLevel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MedicineAccountingAPI.Migrations
{
    [DbContext(typeof(ContextMedicineAccounting))]
    partial class ContextMedicineAccountingModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MedicineAccountingAPI.DataLevel.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount");

                    b.Property<string>("Name");

                    b.Property<double>("Price");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new { Id = 1, Amount = 20, Name = "Citramon", Price = 10.0 },
                        new { Id = 2, Amount = 50, Name = "Nimessil", Price = 11.5 },
                        new { Id = 3, Amount = 20, Name = "Nurofen", Price = 50.0 }
                    );
                });

            modelBuilder.Entity("MedicineAccountingAPI.DataLevel.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Login")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new { Id = 1, Email = "admin@gmail.com", Login = "admin", Name = "Peri", Password = "admin" },
                        new { Id = 2, Email = "bk@gmail.com", Login = "bookkeeper", Name = "Merri", Password = "bookkeeper" }
                    );
                });
#pragma warning restore 612, 618
        }
    }
}
